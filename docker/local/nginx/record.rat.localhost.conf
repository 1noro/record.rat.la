server {
    listen 80 default_server;
    server_name record.rat.localhost;
    root /var/www/html;

    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    # Pass the PHP scripts to PHP-FPM listening on unix:/run/php-fpm.sock
    # see: /etc/php8/php-fpm.d/www.conf
    location ~ ^/index\.php(/|$) {
        fastcgi_pass unix:/run/php-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        # optionally set the value of the environment variables used in the application
        # fastcgi_param APP_ENV prod;
        # fastcgi_param APP_SECRET <app-secret-id>;
        # fastcgi_param DATABASE_URL "mysql://db_user:db_pass@host:3306/db_name";

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        # Caveat: When PHP-FPM is hosted on a different machine from nginx
        #         $realpath_root may not resolve as you expect! In this case try using
        #         $document_root instead.
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;

        # Cache-Control for PHP
        # https://developer.mozilla.org/es/docs/Web/HTTP/Headers/Cache-Control
        expires 5m;
        # (debate entre si poner la cabecera private o must-revalidate)
        # add_header Cache-Control "private";
        add_header Cache-Control "must-revalidate";
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    location ~ /\.ht {
        deny all;
    }

    # Politica de cache
    # (lo que recomienda google es 365d, pero yo creo que 30d esta bien)
    # added by cosmo 202009271454
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|webp|webm|svg)$ {
        expires 365d;
    }
}
