<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>record.rat.la</title>
        <description>Blog/web personal donde iré registrando mis proyectos y mis líos mentales.</description>
        <language>es-es</language>
        <link>https://record.rat.la/</link>
        <atom:link href="https://record.rat.la/rss.xml" rel="self" type="application/rss+xml"/>
        <image>
            <title>record.rat.la</title>
            <url>https://record.rat.la/favicon.png</url>
            <link>https://record.rat.la/</link>
        </image>

<item>
    <title>CD fuzzy finder</title>
    <guid>https://record.rat.la/index.php?page=cd-fuzzy-finder.html</guid>
    <link>https://record.rat.la/index.php?page=cd-fuzzy-finder.html</link>
    <!--<author>Inoro</author>-->
    <pubDate>Sat, 24 Sep 2022 16:59:00 +0200</pubDate>
    <description>
<![CDATA[<!-- 202209241659i -->
<h1>CD fuzzy finder</h1>

<p>
    Presento aquí mi solución personal al problema de moverse rápido por la Shell de GNU/Linux.
</p>

<h3>El problema</h3>

<p>
    Resulta que durante mis largas jornadas de trabajo, donde estoy constantemente entrando y saliendo de carpetas, he notado que moverme con el ratón por el explorador de archivos y luego hacer <em>click</em> derecho en un hueco vacío para abrir un terminal en ese directorio no es un proceso tan rápido como me gustaría. Más de una vez me he encontrado en situaciones en las que estoy recorriendo el mismo camino por cuarta o quinta vez en la misma jornada.
</p>

<p>
    Normalmente yo no necesito entrar a los directorios desde un entorno gráfico, suelo acceder para utilizar Git en modo <em>cli</em>, gestionar archivos o abrir un proyecto entero en el editor de código de turno, con comandos como <code>nvim .</code> o <code>code .</code> los cuales me ahorran mucho tiempo ejecutándolos desde el directorio que me interesa, antes hacer el proceso inverso abriendo estos programas desde el entorno gráfico y luego navegar hasta el directorio desde el.
</p>

<h3>La solución</h3>

<p>
    Yo ya estoy muy acostumbrado a utilizar el atajo de teclado <code>Ctrl+Alt+T</code> para abrir una nueva instancia de la terminal situada en el directorio <em>home</em> de mi usuario. Y se me ocurrió que si conseguía llegar al directorio deseado lo más rápido posible desde ahí acabaría agradeciéndolo.
</p>

<p>
    Conocía el programa <code>fzf</code> (<a href="https://github.com/junegunn/fzf" aria-label="Repositorio de fzf">enlace al repo</a>) que permite hacer una búsqueda sobre una lista de elementos que le mandes como input. Pero realmente, a pesar de el enorme potencial que tiene aún no le había encontrado una utilidad muy clara en mi <em>workflow</em>.
</p>

<p>
    Entonces en un momento de lucidez me vino a la mente el siguiente comando.
</p>

<pre>
cd "$(find * -type d | fzf)"
</pre>

<blockquote>
    Nótese que es necesario haber instalado <code>fzf</code> para que funcione. He aquí la <a href="https://github.com/junegunn/fzf#installation" aria-label="Instrucciones de instalación de fzf">guía de instalación</a>.
</blockquote>

<p>
    Lo que hace básicamente es buscar todos los directorios a partir del actual con el comando <code>find</code> y pasar el output al <code>fzf</code>, dónde nosotros buscaremos y seleccionaremos a dónde queremos ir. Después el resultado seleccionado se le pasa como argumento al comando <code>cd</code> el cual nos lleva a la dirección solicitada. Y las dobles comillas se las ponemos por si el directorio solicitado tiene alguna clase de espacio o carácter especial.
</p>

<p>
    Y ahora que ya tenía lo que yo quería solo necesitaba que fuese accesible lo más rápido posible, por lo que se me ocurrió agregarlo como un <em>bind</em> en mi <code>~/.bashrc</code>, aunque otra opción buena habría sido agregarlo como alias, pero sin embargo creo que el <em>bind</em> es más rápido en este caso.
</p>

<p>
    Al final quedó de esta forma para <strong>bash</strong>, en mi <code>~/.bashrc</code> agregué la siguiente línea.
</p>

<pre>
bind '"\C-g":"cd \"$(find * -type d | fzf)\"\C-m"'
</pre>

<p>
    Y en caso de usar <strong>zsh</strong> habría que agregar lo siguiente al <code>~/.zshrc</code>.
</p>

<pre>
bindkey -s '^g' 'cd "$(find * -type d | fzf)"^M'
</pre>

<blockquote>
    En mi caso <em>bindeé</em> la combinación de teclas <code>Ctrl+G</code> para ejecutar la sentencia.
</blockquote>

<h3>Posibles variaciones</h3>

<p>
    Hay que tener en cuenta que este comando ignora las carpetas ocultas a propósito porque a mi me conviene, pero si quisieras listar también esos directorios solo habría que modificar el comando <code>find</code>. Una posible solución podría ser algo como lo siguiente.
</p>

<pre>
cd "$(find $(pwd) -type d | fzf)"
</pre>

<p>
    Otra variante para el comando <code>find</code> podría ser la posibilidad de ignorar ciertos nombres de carpetas. Por ejemplo, en sistemas macOS no me gustaría buscar dentro del contenido de las carpetas <code>Library</code> o <code>Applications</code>, por lo que el comando quedaría de la siguiente forma.
</p>

<pre>
cd "$(find * \( -path Library -o -path Applications -o -path opt \) -prune -o -print | fzf)"
</pre>

<blockquote>
    He de decir que aún estoy empezando a incorporar esta nueva idea a mi día a día por lo que puede que el comando y, como consecuencia, este articulo puede que sean actualizados a medida que pase el tiempo.
</blockquote>
]]>
    </description>
</item>

<item>
    <title>Expandir una partición EXT4 de forma dinámica</title>
    <guid>https://record.rat.la/index.php?page=expandir-ext4-dinamicamente.html</guid>
    <link>https://record.rat.la/index.php?page=expandir-ext4-dinamicamente.html</link>
    <!--<author>Inoro</author>-->
    <pubDate>Sun, 14 Nov 2021 21:16:00 +0100</pubDate>
    <description>
<![CDATA[<!-- 202111142116i -->
<h1>Expandir una partición EXT4 de forma dinámica</h1>

<p>
    El sistema de archivos EXT4 te permite redimensionar las particiones de un disco duro sin tener que apagar el PC ni borrar tus datos. En caso de no utilizar el 100% de tu disco duro, o si estas gestionando discos virtuales, estes sencillos comandos te pueden facilitar la vida sin tener que volver a formatear el disco.
</p>

<blockquote>
    <em>
        Antes de realizar cualquier modificacion en el disco es necesario señalar la importancia de tener un backup reciente a mano por si metemos la pata.
    </em>
</blockquote>

<h2>Aumentar partición hasta un tamaño exacto</h2>

<p>
    Suponiendo que la partición que quieres expandir es <code>/dev/sdb1</code> (<strong>la única del disco</strong>), con un tamaño inicial de <strong>200MB</strong>, y que quieres que su tamaño sea de <strong>400MB</strong>, podemos ejecutar los siguientes comandos:
</p>

<pre>
sudo parted /dev/sdb resizepart 1 400M
sudo resize2fs /dev/sdb1
</pre>

<h2>Aumentar partición hasta ocupar la totalidad del disco</h2>

<p>
    Suponiendo que la partición que quieres expandir es <code>/dev/sdb1</code> (<strong>la única del disco</strong>), cuyo tamano es <strong>menor a la totalidad del disco</strong>, podemos ejecutar los siguientes comandos para que lo ocupe todo:
</p>

<pre>
sudo parted /dev/sdb resizepart 1 100%
sudo resize2fs /dev/sdb1
</pre>

<blockquote>
    Cualquier mejora o precaución que veais necesaria añadir a estos comandos es bienvenida, en tal caso solo debeis hacermelo saber a través del <a href="#contacto">medio que prefirais</a>.
</blockquote>

<!-- https://gist.github.com/1noro/e9718c6f4b0d2b234f09a0567f375bb3 -->
]]>
    </description>
</item>

<item>
    <title>Häxan: La brujería a través de los tiempos</title>
    <guid>https://record.rat.la/index.php?page=haxan-brujeria-a-traves-del-tiempo.html</guid>
    <link>https://record.rat.la/index.php?page=haxan-brujeria-a-traves-del-tiempo.html</link>
    <!--<author>Inoro</author>-->
    <pubDate>Tue, 27 Jul 2021 19:02:00 +0200</pubDate>
    <description>
<![CDATA[<!-- 202107271902i -->
<h1>Häxan: La brujería a través de los tiempos</h1>

<p>
    Benjamin Christensen (1922) <em>documental, cine mudo, años 20, brujería, esoterismo, religión</em>
</p>

<p>
    <img src="https://record.rat.la/img/20210727/haxan-750.jpg" alt="Recreación de una ensoñación en un pasaje del film.">
</p>

<p>
    Benjamin Christensen, de forma muy rudimentaria pero efectiva, nos expone 
    una serie de escenas independientes donde intenta explicar el contexto y 
    las consecuencias que sufrían las mujeres acusadas de brujería en 
    diferentes etapas de la historia. Una delicia estética que no te dejará 
    indiferente a la hora de juzgarlo desde la perspectiva actual.
</p>

<p>
    Cuando me enteré de que existía un documental de 1922, mudo, sobre la 
    historia de la brujería a través de los tiempos no pude esperar para verlo. 
    Combina a la perfección demasiadas cosas que me encantan en una única 
    película; los documentales, el cine mudo, la temática lúgubre y mística de 
    los cuentos de terror y, a demás, el cambio de perspectiva que supone, 
    desde hoy en día, tratar un tema como este con la visión de los años 20.
</p>

<p>
    A pesar de lo mucho que me fascine, no considero que sea un film que 
    interese a todo el mundo, pero si que lo recomiendo a personas que les 
    gusta el cine raro y experimental, o los cuentos de terror al estilo de 
    <em>Lovecraft</em> o <em>Poe</em>.
</p>
]]>
    </description>
</item>

<item>
    <title>Yojimbo (用心棒) – Japón inspira al Western</title>
    <guid>https://record.rat.la/index.php?page=yojimbo-japon-inspira-western.html</guid>
    <link>https://record.rat.la/index.php?page=yojimbo-japon-inspira-western.html</link>
    <!--<author>Inoro</author>-->
    <pubDate>Sat, 24 Jul 2021 20:57:00 +0200</pubDate>
    <description>
<![CDATA[<!-- 202107242057i -->
<h1>Yojimbo <em>(用心棒)</em> – Japón inspira al <em>Western</em></h1>

<p>
    Akira Kurosawa (1961) <em>acción, japón feudal, samuráis, Toshiro Mifune, western</em>
</p>

<p>
    <img src="https://record.rat.la/img/20210724/yojimbo-750.jpg" alt="Ikio Sawamura y Toshiro Mifune.">
</p>

<p>
    Un samurái llega a un pueblo desolado bajo el conflicto contínuo entre dos 
    familias, observando el panorama se percata de que gracias a sus 
    habilidades con la espada puede sacar provecho de la situación a pesar de 
    las advertencias de la población local.
</p>

<p>
    Posiblemente el germen que dió lugar al <em>spaghetti western</em> debido 
    a que Sergio Leone, precursor del género, plagió el argumento de esta 
    película (cambiando la ambientación) en 
    <strong>Por un puñado de dólares</strong> (1964). El alegó que lo hacía a 
    modo de homenaje a Akira Kurosawa, al cuál admiraba mucho, pero el juez 
    dictaminó que no cumplió con el <em>copyright</em> y eso le costó los 
    derechos de distribución en parte de ásia y el 15% de los beneficios de 
    toda la película. A Kurosawa le gustó el film pero no le hizo mucha 
    gracia la "broma".
</p>

<p>
    En mi opinión, todas las versiones de este argumento son de mi agrado y 
    devoción, pero esta destaca por más motivos que la anécdota. Me encanta 
    la fotografía, y, a pesar de no tener ni idea de imagen o color, creo que 
    este blanco y negro tienen algo especial (si alguien sabe lo que es que me 
    lo cuente). También soy muy fan de Toshiro Mifune, y su forma de actuar me 
    fascina. Creo que en esta película es una de estas donde se ve al actor en 
    su rol mas icónico, haciendo de samurái solitario, justiciero y 
    carismático. Una de esas imágenes que quedarán para siempre grabadas en la 
    história del cine. Muy recomendable.
</p>

<p>
    Mientras me informaba para escribir mi opinión me he percatado de que 
    tiene secuela: <strong>Sanjuro</strong> (1962). Ardo en deseos de verla 
    cuanto antes.
</p>
]]>
    </description>
</item>

<item>
    <title>Arañas antiguas – Un sueño esotérico</title>
    <guid>https://record.rat.la/index.php?page=aranas-antiguas-sueno-esoterico.html</guid>
    <link>https://record.rat.la/index.php?page=aranas-antiguas-sueno-esoterico.html</link>
    <!--<author>Inoro</author>-->
    <pubDate>Thu, 22 Jul 2021 00:46:00 +0200</pubDate>
    <description>
<![CDATA[<!-- 202107220046i -->
<h1>Arañas antiguas – Un sueño esotérico</h1>

<p>
    Esta es la transcripción de un sueño de la noche del 22 de Octubre de 2018.
</p>

<p>
    Me gusta escribir los pocos sueños que recuerdo en una especie de diario,
    y como este me resultó especialmente teatral me parece lo
    suficientemente interesante como para presentarlo aquí.
</p>

<blockquote>
    Debo hacer notar que al comienzo de la transcripción hay una nota que
    indica que la narración está desordenada, sea lo que sea lo que quiera
    decir eso.
</blockquote>

<p>
    &laquo;Se presentan ante mi un conjunto de cajas negras. Unas manos sin
    rostro definido me las van mostrando una por una. Yo permanezco inmóvil,
    sentado frente la misteriosa figura que me presenta los macabros objetos.
    Cuando acaba de enseñarme todas las cajas por fuera se dispone a abrir la
    primera.
</p>

<p>
    El interior de las cajas es de una tela blanca y acolchada, como si de una
    cama se tratase. A medida que se va abriendo, observo con auténtico pavor
    su horripilante contenido. En su interior veo un conjunto de negras arañas
    de diferentes tamaños que se mantienen inmóviles, posadas sobre la sedosa
    tela blanca. Una vez abierta por completo, la figura que me muestra la caja
    va acercándola hacia mi lentamente, y yo empiezo a sudar frío. Pero da
    igual el enorme horror que me invade, no me puedo mover, algo me retiene
    en el asiento a pesar de no ver ni notar ninguna sujeción física —estoy
    petrificado por el miedo—.
</p>

<p>
    Cuando la caja ya está lo suficientemente cerca de mi con su espantoso
    contenido a la vista, las arañas empiezan a reanimarse lentamente, huyendo
    hacia los bordes. Y antes de que las más espabiladas intenten saltar fuera
    del receptáculo que las mantenía en pausa, la figura con rostro difuso
    cierra la tapa de golpe ante mis narices y susurra
    —Estas cajas son antiguas, muy antiguas, tan antiguas que los humanos
    habían olvidado su existencia. Su contenido es tan antiguo como las cajas,
    pero ya ves, a pesar de lo increíble que parezca, ellas siguen vivas—.
</p>

<p>
    En ese instante la figura abre una segunda, y el proceso se repite
    exactamente como el anterior, a excepción de mi miedo, el cual aumentaba
    con cada caja abierta. El proceso se repitió como el primero hasta llegar
    a la última, cuando —justo antes de cerrarse— una de las arañas
    consigue escabullirse por el borde de de la caja y cae sobre mis
    piernas.&raquo;
   
</p>

<p>
    En ese momento mi terror es tal que no puedo soportarlo y me despierto.
    Me gusta pensar que si hubiera conseguido seguir durmiendo me hubiera
    desmayado en sueños. O ¿quién sabe? igual la esotérica araña causaba en
    mí una reacción digna de un relato de H.P. Lovecraft, nunca lo sabremos, y
    prefiero no repetirlo.
</p>

<p>
    Buenas noches, y tened dulces sueños.
</p>
]]>
    </description>
</item>

<item>
    <title>Git quick reference</title>
    <guid>https://record.rat.la/index.php?page=comandos-utiles-git.html</guid>
    <link>https://record.rat.la/index.php?page=comandos-utiles-git.html</link>
    <!--<author>Inoro</author>-->
    <pubDate>Tue, 13 Apr 2021 21:59:00 +0200</pubDate>
    <description>
<![CDATA[<!-- 202104132159i -->
<h1><em>Git quick reference</em></h1>

<p>Listado de los comandos más recurrentes en el día a día con <em>git</em>.</p>

<h2>Elementos a tener en cuenta antes de leer los comandos</h2>

<ul>
    <li>Siempre que puedas poner un único archivo (<code>&lt;file&gt;</code>) en un comando, puedes poner un <code>.</code> para referirte a todos de forma recursiva.</li>
</ul>

<h2>Obtener un repositorio — <em>clone</em></h2>

<p>Para descargar un repositorio remoto a tu máquina local.</p>

<pre>
git clone &lt;https_or_ssh_link&gt;
</pre>

<h2>Antes de hacer un <em>commit</em></h2>

<p>
    Comprobar el estado del repositorio.
</p>

<pre>
git status
</pre>

<p>
    Ver los cambios realizados sobre un archivo desde el último commit.
</p>

<pre>
git diff &lt;file&gt;
</pre>

<p>
    Restaurar todos los cambios de un archivo al punto del último commit.
</p>

<pre>
git restore &lt;file&gt;
</pre>

<h3>Comandos sobre el <a href="https://youtu.be/mVjHJFscwsk"><em>staging area</em></a></h3>

<p>
    Agregar un archivo al <em>staging area</em>.
</p>

<pre>
git add &lt;file&gt;
</pre>

<p>
    Quitar un archivo del <em>staging area</em>.
</p>

<pre>
git restore --staged &lt;file&gt;
</pre>

<h2>Confirmar los cambios — <em>commit</em></h2>

<p>Una vez agregados los archivos al <em>staging area</em> realizar un <em>commit</em>.</p>

<pre>
git commit -m "&lt;commit_message&gt;"
</pre>

<h2>Actualizar el repositorio remoto — <em>push</em></h2>

<p>Una vez realizados uno o más <em>commits</em> se pueden subir los cambios a un repositorio remoto.</p>

<pre>
git push
</pre>

<p>Equivalente más detallada del comando anterior.</p>

<pre>
git push origin &lt;branch&gt;
</pre>

<blockquote>
    Encuentre una referencia que coincida con <code>&lt;branch&gt;</code> 
    en el repositorio de <em>origin</em> (lo más probable es que encuentre 
    <em>refs / heads / master / main</em>) y actualice la misma referencia (por 
    ejemplo, <em>refs / heads / master / main</em>) en el repositorio de 
    <em>origin</em> con él. Si el <code>&lt;branch&gt;</code> no 
    existiera de forma remota, se crearía. - <em>Modificación sobre la definición del manual <code>man git push</code></em>.
</blockquote>

<h2>Trabajar con ramas — <em>branches</em></h2>

<p>
    Listar ramas <strong>locales</strong>.
</p>

<pre>
git branch
</pre>

<blockquote>
    Agregando la opción <code>--all</code> se pueden ver también las <strong>ramas remotas</strong>.
</blockquote>

<p>
    Crear una rama nueva y moverte a ella.
</p>

<pre>
git checkout -b &lt;branch_name&gt;
</pre>

<p>
    Cambiar de rama.
</p>

<pre>
git checkout &lt;branch_name&gt;
</pre>

<p>
    Borrar una rama local.
</p>

<pre>
git branch -d &lt;branch_name&gt;
</pre>

<p>
    Borrar una rama remota.
</p>

<pre>
git push origin --delete &lt;branch_name&gt;
</pre>
]]>
    </description>
</item>

<item>
    <title>Configurar los drivers de Nvidia en Arch Linux</title>
    <guid>https://record.rat.la/index.php?page=drivers-nvidia-arch-linux.html</guid>
    <link>https://record.rat.la/index.php?page=drivers-nvidia-arch-linux.html</link>
    <!--<author>Inoro</author>-->
    <pubDate>Mon, 29 Mar 2021 22:56:00 +0200</pubDate>
    <description>
<![CDATA[<!-- 202103292256i -->
<h1>Configurar los drivers de Nvidia en Arch Linux</h1>

<p>
    Yo antes solo utilizaba mi fabulosa tarjeta gráfica integrada de 
    <strong>Intel Graphics 2500</strong>, pero durante el confinamiento estuve 
    jugando a algún que otro videojuego y vi que se quedaba algo corta en 
    ciertos aspectos, por lo que decidí comprarme una tarjeta gráfica.
</p>

<p>
    Me compré una <strong>Nvidia GTX 1070</strong>, por lo que enfocaré este 
    artículo hacia mi modelo. Por suerte, mi configuración habitual es bastante 
    estándar, por lo que puede que le sirva a más de uno. Uso el núcleo 
    de <strong>Linux</strong> por defecto y <strong>Gnome</strong> sobre 
    <strong>Xorg</strong> en el escritorio, como buen amante del 
    <em>default</em> que soy. En 
    <a href="https://wiki.archlinux.org/index.php/NVIDIA#Installation">este apartado de la Arch Wiki</a> 
    podrás confirmar si tu gráfica se ajusta a estas instrucciones o no.
</p>

<blockquote>
    Antes de comenzar a explicar debo informar que en este artículo no vas a 
    encontrar una mejor solución que <a href="https://wiki.archlinux.org/index.php/NVIDIA">en la Arch Wiki</a>. 
    Escribo esto para que yó, que ya me he leído la wiki, y la he adaptado a 
    mi situación, no tenga que volver a hacerlo la próxima vez que instale mi 
    PC. Si encuentras algún problema durante este proceso puedes consultarme, 
    pero personalmente te recomiendo que consultes la wiki. Estoy seguro de que 
    tu solución específica se encuentra ahí.
</blockquote>

<h2>Eliminar la instalación previa de Intel</h2>

<p>
    Como parto de mi situación real, veo útil explicar los pasos que seguí 
    durante la desinstalación de los drivers de <strong>Intel</strong> que 
    estaban configurados previamente en mi PC.
</p>

<p>
    Editamos el archivo <samp>/etc/mkinitcpio.conf</samp> y eliminamos del 
    array <code>MODULES</code> el módulo <code>i915</code>. Como yo no tenía 
    ningún modulo más, previamente mi array quedaría de la siguiente manera.
</p>

<pre>
MODULES=()
</pre>

<p>
    Y ejecutamos el <code>mkinitcpio</code>.
</p>

<pre>
sudo mkinitcpio -p linux
</pre>

<p>
    Configuramos el <strong>GRUB</strong>, para que no cargue el módulo de 
    <em>kernel</em> que acabamos de quitar, editando el archivo 
    <samp>/etc/default/grub</samp>.
</p>

<p>
    Eliminamos el parámetro <code>i915.enable_guc=2</code> de la línea 
    <code>GRUB_CMDLINE_LINUX_DEFAULT</code>. Quedando, en mi caso, de la 
    siguiente forma.
</p>

<pre>
GRUB_CMDLINE_LINUX_DEFAULT="loglevel=4 nowatchdog"
</pre>

<p>
    Y volvemos a generar la configuración del <strong>GRUB</strong>.
</p>

<pre>
sudo grub-mkconfig -o /boot/grub/grub.cfg
</pre>

<p>
    Borramos las configuraciones de Intel.
</p>

<pre>
sudo rm /etc/X11/xorg.conf.d/20-intel.conf
rm ~/.drirc
</pre>

<p>
    Ponemos en la lista negra los módulos de Intel.
</p>

<pre>
sudo echo 'install i915 /bin/false' >> /etc/modprobe.d/blacklist.conf
sudo echo 'install intel_agp /bin/false' >> /etc/modprobe.d/blacklist.conf
</pre>

<p>
    Borramos los drivers de Intel.
</p>

<pre>
sudo pacman -Rns xf86-video-intel
</pre>

<h2>Instalar y configurar los drivers de Nvidia</h2>

<p>
    Instalamos los controladores y utilidades extra de Nvidia, a ser posible 
    <u>en este mismo orden</u>.
</p>

<pre>
sudo pacman -S nvidia-utils
sudo pacman -S nvidia
sudo pacman -S lib32-nvidia-utils
sudo pacman -S nvidia-settings
</pre>

<p>
    Generamos una configuración automática.
</p>

<pre>
sudo nvidia-xconfig
</pre>

<p>
    Revisamos <samp>/etc/xorg.conf</samp> para ver si nos convencen los 
    parámetros auto-generados, y <strong>comentamos</strong> la siguiente 
    línea si está presente.
</p>

<pre>
# Load        "dri"
</pre>

<p>
    Agregamos los siguientes módulos al kernel editando el array 
    <code>MODULES</code> del archivo <samp>/etc/mkinitcpio.conf</samp>.
</p>

<pre>
MODULES=(nvidia nvidia_modeset nvidia_uvm nvidia_drm)
</pre>

<p>
    Y ejecutamos el <code>mkinitcpio</code>.
</p>

<pre>
sudo mkinitcpio -p linux
</pre>

<p>
    Definimos el parámetro <code>nvidia-drm.modeset=1</code> de arranque del 
    kernel en la línea <code>GRUB_CMDLINE_LINUX_DEFAULT</code> de la 
    configuración del <strong>GRUB</strong>, editando el archivo 
    <samp>/etc/default/grub</samp>.
</p>

<p>
    El resultado sería el siguiente.
</p>

<pre>
GRUB_CMDLINE_LINUX_DEFAULT="loglevel=4 nowatchdog nvidia-drm.modeset=1"
</pre>

<p>
    Y volvemos a generar la configuración del <strong>GRUB</strong>.
</p>

<pre>
sudo grub-mkconfig -o /boot/grub/grub.cfg
</pre>

<p>
    Ahora solo queda <u>reiniciar</u> la máquina para que se aplique la nueva 
    configuración. Recuerda cambiar el cable de la pantalla y conectarlo a la 
    gráfica.
</p>
]]>
    </description>
</item>

<item>
    <title>Software que utilizo habitualmente</title>
    <guid>https://record.rat.la/index.php?page=mi-software.html</guid>
    <link>https://record.rat.la/index.php?page=mi-software.html</link>
    <!--<author>Inoro</author>-->
    <pubDate>Wed, 10 Mar 2021 13:32:00 +0100</pubDate>
    <description>
<![CDATA[<!-- 202103101332i -->
<h1>Software que utilizo habitualmente</h1>

<p>
    Escribo esto a modo de reflexión sobre que programas realmente utilizo,
    cuales me hacen ser más productivo en mi día a día, y si debería obviar
    alguno en futuras instalaciones.
</p>

<h2>Básico</h2>

<h3>Sistemas Operativos</h3>

<ul>
    <li>
        <a href="https://archlinux.org/download/"><strong>Arch Linux</strong></a> es mi
        distribución principal actualmente en mi PC y portátil.
    </li>
    <li>
        <a href="https://www.debian.org/index.es.html"><strong>Debian</strong></a> lo
        utilizo en mis servidores, en mi opinión es la mejor opción para un
        servidor.
    </li>
    <li>
        <a href="https://ubuntu.com/download/server"><strong>Ubuntu Server LTS</strong></a>
        lo utilizo también en mis servidores cuando considero que Debian se
        queda un poco anticuado, o si voy a probar una aplicación que está más
        orientada a esta distribución. No suelo tener muchas instalaciones con
        este SO, porque muchas veces solo tengo que esperar a la siguiente
        versión de Debian.
    </li>
</ul>

<h3>Window Manager/Desktop Environment</h3>

<p>
    <strong>gnome-shell</strong> es el entorno de escritorio que más me gusta
    y estoy muy acostumbrado a su <em>workflow</em> (sobre todo en la versión
    40). De todas formas estoy muy interesado en probar un <em>tiling window
    manager</em> estilo <strong>dwm</strong> o <strong>i3</strong> en el que
    sea capaz de recordar todos sus comandos.
</p>

<h3>Terminal</h3>

<p>
    <strong>gnome-terminal</strong>, la uso porque es la que viene por defecto
    con <strong>gnome-shell</strong> pero puede que cambie en algún momento.
    Busco algo más simple, como <strong>st</strong> (simple terminal) de
    <a href="https://st.suckless.org/">suckless.org</a>, pero aún debería
    probarla por algún tiempo más para decidirme.
</p>

<h3>Shell</h3>

<p>
    <strong>bash</strong>, soy una persona a la que le gusta el default, por
    lo que aún no veo necesario mudarme a <strong>zsh</strong>, a pesar de
    que promete mucha más flexibilidad.
</p>

<h3>Editores de texto y entornos de programación</h3>

<p>
    Esta sección no solo es confusa, sinó que en realidad yo me encuentro muy
    confuso al respecto. Sigo buscando el editor de texto definitivo, he
    probado muchos, pero no dejo de cambiar. Me gustaría proba
    <strong>vim</strong> pero creo que aún no estoy preparado.
</p>

<ul>
    <li>
        <strong>Vim</strong>, resulta que actualmente estoy intentando
        utilizarlo como único editor de texto para todo mi <em>workflow</em>,
        que últimamente se traduce en <em>Markdown</em>, <em>BASH</em>,
        <em>Docker</em>, <em>YAML</em> y algún que otro texto plano.
    </li>
    <li>
        <strong>Visual Studio Code</strong> era, hasta hace poco tiempo, mi
        entorno de desarrollo por defecto. Es rápido y muy extensible gracias
        a todos los plugins que se le pueden instalar. Empecé usando
        <strong>atom</strong> pero acabé cansándome de lo mal que funciona su
        cliente de <strong>git</strong>. A pesar de todo, hoy en día utilizo
        más <strong>git</strong> desde la terminal que desde <em>GUI</em>.
    </li>
</ul>

<h3>Navegador web</h3>

<p>
    Esto es un tema complicado. Como persona que programa páginas web de vez
    en cuando, normalmente tengo <strong>Chromium</strong> y
    <strong>Firefox</strong> instalados, para poder ver las dos caras de la
    moneda.
</p>

<p>
    Creo que la mejor opción actualmente es <strong>Firefox</strong> en
    conjunto con las extensiones
    <a href="https://github.com/gorhill/uBlock">uBlock Origin</a>,
    <a href="https://www.eff.org/es/https-everywhere">HTTPS Everywhere</a> y
    <a href="https://addons.mozilla.org/es/firefox/addon/strict-pop-up-blocker/">Strict Pop-up Blocker</a>.
    Es cierto que en estos días parece que no es tan rápido como
    <strong>Chrome</strong> y derivados, pero ya sabemos que dichas estadísticas
    suelen variar mucho en cada versión nueva que sale. Además usar
    <strong>Firefox</strong>, en mi caso, es más una elección que yo hago
    poniendo la privacidad por delante de la velocidad de navegación.
</p>

<p>
    A pesar de todo, he de confesar que, a raíz del dilema privacidad vs
    velocidad de navegación, he empezado a probar el navegador
    <a href="https://brave.com/es/">Brave</a> (sin ninguna extensión) como
    navegador principal, en mi movil primero, puesto que
    <strong>Firefox</strong> (a pesar de tener un diseño excelente) es cada
    día más lento, y posteriormente en mi PC, donde más tiempo paso todos los
    días. Aún no puedo sacar ninguna conclusión definitiva de esta experiencia,
    y sigo estando a favor de <strong>Firefox</strong>. Sin embargo, si consigo
    pasar un par de meses utilizando <strong>Brave</strong> y no encuentro
    ningún impedimento puede que termine mudándome. En tal caso supongo que lo
    anunciaré en un futuro artículo.
</p>

<h2>Smartphone (Android)</h2>

<h3>Mensajería instantánea</h3>

<p>
    <strong>Telegram</strong> y <strong>Signal</strong>, se que
    <strong>Telegram</strong> no es tan seguro como <strong>Signal</strong> y
    que tiene un montón de carencias a nivel de seguridad. Pero ya me ha
    costado demasiado mover a todo mi círculo desde <strong>WhatsApp</strong>
    hasta <strong>Telegram</strong> como para ahora decirles que tienen que
    usar Signal para hablar conmigo. De todas formas, actualmente, ya lo
    lo estoy intentando a paulatinamente.
</p>
]]>
    </description>
</item>

<item>
    <title>Gitlab con NGINX reverse proxy</title>
    <guid>https://record.rat.la/index.php?page=gitlab-nginx.html</guid>
    <link>https://record.rat.la/index.php?page=gitlab-nginx.html</link>
    <!--<author>Inoro</author>-->
    <pubDate>Sun, 07 Mar 2021 11:07:00 +0100</pubDate>
    <description>
<![CDATA[<!-- 202103071107i -->
<h1>Gitlab con NGINX reverse proxy</h1>

<p>
    Voy a documentar el proceso de instalación de Gitlab en una máquina virtual
    detrás de un NGINX reverse proxy.
</p>

<h2>Escenario</h2>

<p>
    <img src="https://record.rat.la/img/202103071107/gitlab-nginx.webp" alt="Diagrama.">
</p>

<h3>Características</h3>

<ul>
    <li>Certificado SSL con Let's Encrypt y certbot.</li>
    <li>
        Escuchar en los puertos 80 (HTTP) y 443 (HTTPs) con una redirección
        automática desde el 80 al 443.
    </li>
    <li>
        Acceso mediante SSH con clave pública y protegido con fail2ban.
    </li>
</ul>

<h2>Configuración del router</h2>

<p>
    En la sección de redirección de puertos (port forwarding) de nuestro router
    creamos dos registros nuevos sobre el protocolo TCP.
</p>

<ul>
    <li>
        El puerto 80 del router apuntará al puerto 80 de la máquina de NGINX 
        (192.168.1.105), para las conexiones HTTP.
    </li>
    <li>
        El puerto 443 del router apuntará al puerto 443 de la máquina de NGINX 
        (192.168.1.105), para las conexiones HTTPs.
    </li>
    <li>
        El puerto 22 del router apuntará al puerto 22 de la máquina de Gitlab 
        (192.168.1.108), para las conexiones SSH.
    </li>
</ul>

<h2>Configuración de NGINX</h2>

<p>Nos situamos en la máquina que va a ejercer de reverse proxy con NGINX.</p>

<p>
    Creamos el archivo 
    <samp>/etc/nginx/sites-available/git.example.com.conf</samp>
</p>

<pre>
server {
    listen 80;
    listen [::]:80;
    server_name git.example.com;

    location / {
        proxy_pass "http://192.168.1.108/";
        proxy_redirect off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Url-Scheme $scheme;
    }
}
</pre>

<p>Habilitamos el sitio.</p>

<pre>
ln -s /etc/nginx/sites-available/git.example.com.conf /etc/nginx/sites-enabled/
</pre>

<p>
    Testeamos la sintaxis de la configuración de NGINX, y si todo va bien,
    recargamos la configuración.
</p>

<pre>
nginx -t
systemctl reload nginx
</pre>

<p>
    Con el Virtual Host correctamente configurado en NGINX, ejecutamos el 
    certbot.
</p>

<pre>
certbot --nginx -d git.example.com
</pre>

<blockquote>
    Durante el proceso de creación del certificado indicamos que queremos
    redireccionar el tráfico HTTP al HTTPs.
</blockquote>

<p>
    Archivo <samp>/etc/nginx/sites-available/git.example.com.conf</samp>
    después de ejecutar el certbot.
</p>

<pre>
server {
    server_name git.example.com;

    location / {
        proxy_pass "http://192.168.1.108/";
        proxy_redirect off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Url-Scheme $scheme;
    }

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/git.example.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/git.example.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = git.example.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    listen [::]:80;

    server_name git.example.com;
    return 404; # managed by Certbot
}
</pre>

<h2>Configuración SSH</h2>

<p><a href="https://docs.github.com/es/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">Generamos en nuestro equipo una clave SSH.</a></p>

<p>Copiamos la clave a la máquina del Gitlab (192.168.1.108).</p>

<pre>
ssh-copy-id -i ~/.ssh/id_rsa.pub user@192.168.1.108
</pre>

<p>Nos situamos en la máquina que va a ejecutar Gitlab (192.168.1.108).</p>

<p>
    Editamos el archivo <samp>/etc/ssh/sshd_config</samp> y nos aseguramos de
    que las siguientes lineas tengan los valores mostrados.
</p>

<pre>
UsePAM yes
PasswordAuthentication no
</pre>

<p>Y agregamos la siguiente línea al final.</p>

<pre>
PermitRootLogin no
</pre>

<p>Guardamos y reiniciamos el servicio.</p>

<pre>
sudo systemctl restart sshd
</pre>

<h3>Fail2ban</h3>

<p>Instalamos el programa.</p>

<pre>
sudo apt update
sudo apt install fail2ban
</pre>

<p>
    Creamos el archivo <samp>/etc/fail2ban/jail.local</samp> y agregamos las 
    siguientes lineas.
</p>

<pre>
[DEFAULT]
ignoreip = 127.0.0.1/8 192.168.1.0/24
bantime = 10m
maxretry = 5
findtime = 1d

[sshd]
enabled = true
</pre>

<p>Guardamos y reiniciamos el servicio.</p>

<pre>
sudo systemctl restart fail2ban
</pre>

<h2>Instalación y configuración de Gitlab</h2>

<p>Nos situamos en la máquina que va a ejecutar Gitlab (192.168.1.108).</p>

<p>Instalamos los paquetes necesarios y agregamos el repositorio de Gitlab.</p>

<pre>
sudo apt update
sudo apt install curl openssh-server ca-certificates tzdata perl postfix
</pre>

<pre>
curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | sudo bash
</pre>

<pre>
sudo EXTERNAL_URL="http://git.example.com" apt-get install gitlab-ce
</pre>

<blockquote>
    Nótese que el parámetro <samp>EXTERNAL_URL</samp> se define con 
    <samp>http</samp> y no con <samp>https</samp>.
</blockquote>

<p>
    Editamos el archivo <samp>/etc/gitlab/gitlab.rb</samp> y agregamos las 
    siguientes lineas al final.
</p>

<pre>
nginx['listen_port'] = 80
nginx['listen_https'] = false

nginx['proxy_set_headers'] = {
    "X-Forwarded-Proto" => "http"
}

nginx['real_ip_trusted_addresses'] = [ '192.168.1.0/24' ]
nginx['real_ip_header'] = 'X-Forwarded-For'
nginx['real_ip_recursive'] = 'on'
</pre>

<p>
    Re-configuramos Gitlab.
</p>

<pre>
sudo gitlab-ctl reconfigure
</pre>

<blockquote>
    Hay que espera un rato a que se reconfigure, incluso después de que el
    comando haya finalizado.
</blockquote>

<p>
    Una vez acabado este proceso ya podremos acceder a nuestro Gitlab a través
    de HTTPs para definir la contraseña del usuario <samp>root</samp>.
</p>

<h2>Bibliografía</h2>

<ul>
    <li><a href="https://linuxize.com/post/install-configure-fail2ban-on-ubuntu-20-04/">How to Install and Configure Fail2ban on Ubuntu 20.04</a></li>
    <li><a href="https://about.gitlab.com/install/#ubuntu">Gitlab Official Linux package (recommended installation)</a></li>
    <li><a href="https://docs.gitlab.com/omnibus/settings/nginx.html">Gitlab NGINX settings</a></li>
</ul>
]]>
    </description>
</item>

<item>
    <title>Solución a algunas series numéricas en Java y Python</title>
    <guid>https://record.rat.la/index.php?page=solucion-series-numericas-java-python.html</guid>
    <link>https://record.rat.la/index.php?page=solucion-series-numericas-java-python.html</link>
    <!--<author>Inoro</author>-->
    <pubDate>Sun, 04 Oct 2020 11:36:00 +0200</pubDate>
    <description>
<![CDATA[<!-- 202010041136i -->
<h1>Solución a algunas series numéricas en Java y Python</h1>

<p>
    Lista del código que calcula las diferentes series numéricas propuestas en el Ejercicio evaluable 1 de la asignatura Programación Multimedia y Dispositivos Móviles.
</p>

<blockquote>
    <em>Voy a tomar como regla que todas las listas serán de 100 elementos como máximo.</em>
</blockquote>

<h2>1. La serie de Fibonacci</h2>

<p>Mi explicación: Empezando con <samp>[0, 1]</samp>, el siguiente se calcula con la suma de los dos anteriores.</p>

<h3>Fibonacci en Java</h3>

<pre>
package ej1pmydm;

public class Ej1pmydm {
    public static void main(String[] args) {
        double lista[] = new double[100];
        lista[0] = 0;
        lista[1] = 1;
        int i = 1;
        while (i < lista.length - 1) {
            lista[i + 1] = lista[i - 1] + lista[i];
            i++;
        }
        for (i = 0; i < lista.length; i++) {
            System.out.println(lista[i]);
        }
    }
}
</pre>

<h3>Fibonacci en Python</h3>

<pre>
lista = [0, 1]
while len(lista) < 100:
    lista.append(lista[-2] + lista[-1])
print(lista)
</pre>

<h2>2. La serie de Tribonacci</h2>

<p>Mi explicación: Empezando con <samp>[1, 1, 2]</samp>, el siguiente se calcula con la suma de los tres anteriores.</p>

<h3>Tribonacci en Java</h3>

<pre>
package ej2pmydm;

public class Ej2pmydm {
    public static void main(String[] args) {
        double lista[] = new double[100];
        lista[0] = 1;
        lista[1] = 1;
        lista[2] = 2;
        int i = 2;
        while (i < lista.length - 1) {
            lista[i + 1] = lista[i - 2] + lista[i - 1] + lista[i];
            i++;
        }
        for (i = 0; i < lista.length; i++) {
            System.out.println(lista[i]);
        }
    }
}
</pre>

<h3>Tribonacci en Python</h3>

<pre>
lista = [1, 1, 2]
while len(lista) < 100:
    lista.append(lista[-3] + lista[-2] + lista[-1])
print(lista)
</pre>

<h2>3. La serie en la cual si el anterior es par se suman los tres anteriores y, si es impar, solo los dos anteriores</h2>

<p>
    Mi explicación: Empezamos con la lista <samp>[1, 1]</samp>.
    <ul>
        <li>Si el último es impar, se suman los 2 últimos para calcular el siguiente.</li>
        <li>Si el último es par, se suman los 3 últimos para calcular el siguiente.</li>
    </ul>
</p>

<h3>La serie anterior en Java</h3>

<pre>
package ej3pmydm;

public class Ej3pmydm {
    public static void main(String[] args) {
        double lista[] = new double[100];
        lista[0] = 1;
        lista[1] = 1;
        int i = 1;
        while (i < lista.length - 1) {
            if (lista[i] % 2 != 0) {
                lista[i + 1] = lista[i - 1] + lista[i];
            } else {
                lista[i + 1] = lista[i - 2] + lista[i - 1] + lista[i];
            }
            i++;
        }
        for (i = 0; i < lista.length; i++) {
            System.out.println(lista[i]);
        }
    }
}
</pre>

<h3>La serie anterior en Python</h3>

<pre>
lista = [1, 1]
while len(lista) < 100:
    if lista[-1] % 2 != 0:
        lista.append(lista[-1] + lista[-2])
    else:
        lista.append(lista[-1] + lista[-2] + lista[-3])
print(lista)
</pre>

<h2>4. La serie de los cuadrados perfectos escritos al revés</h2>

<p>Tengo dudas, no sé si se refiere a esto:</p>

<h3>Los cuadrados perfectos al revés en Java</h3>

<pre>
package ej4pmydm;

public class Ej4pmydm {
    public static void main(String[] args) {
        int lista[] = new int[100];
        int numero = 100;
        int i = 0;
        while (i < lista.length) {
            lista[i] = numero * numero;
            numero--;
            i++;
        }
        for (i = 0; i < lista.length; i++) {
            System.out.println(lista[i]);
        }
    }
}
</pre>

<h3>Los cuadrados perfectos al revés en Python</h3>

<pre>
lista = []
numero = 100
while numero > 0:
    lista.append(numero * numero)
    numero -= 1
print(lista)
</pre>

<h2>5. La serie que suma las cifras de los anteriores</h2>

<p>Ojo, se refiere a el <strong>número de cifras</strong>, no a la suma del os valores anteriores.</p>

<h3>La suma las cifras de los anteriores en Java</h3>

<pre>
package ej5pmydm;

public class Ej5pmydm {
    public static void main(String[] args) {
        int lista[] = new int[100];
        lista[0] = 1;
        int i = 0;
        while (i < lista.length - 1) {
            lista[i+1] = lista[i] + Integer.toString(lista[i]).length();
            i++;
        }
        for (i = 0; i < lista.length; i++) {
            System.out.println(lista[i]);
        }
    }
}
</pre>

<h3>La suma las cifras de los anteriores en Python</h3>

<pre>
lista = [1]
while len(lista) < 100:
    nuevo = 0
    for numero in lista:
        nuevo += len(str(numero))
    lista.append(nuevo)
print(lista)
</pre>
]]>
    </description>
</item>

    </channel>
</rss>